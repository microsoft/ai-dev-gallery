parameters:
  dotnet_configuration: 'Release'
  dotnet_platform: ''

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $manifestPath = "$(Build.SourcesDirectory)\AIDevGallery\Package.appxmanifest"
      [xml]$manifest = get-content $manifestPath
      $manifest.Package.Identity.Version = "$($env:GitBuildVersionSimple).0"
      $manifest.Save($manifestPath)
  displayName: Update Package Manifest Version
- script: dotnet restore AIDevGallery.sln -r win-${{ parameters.dotnet_platform }} /p:Configuration=${{ parameters.dotnet_configuration }} /p:Platform=${{ parameters.dotnet_platform }} /p:PublishReadyToRun=true /p:SelfContainedIfPreviewWASDK=true
  displayName: Restore dependencies - ${{ parameters.dotnet_platform }}
- script: |
    dotnet build AIDevGallery.Utils --no-restore /p:Configuration=Release
    dotnet build AIDevGallery --no-restore -r win-${{ parameters.dotnet_platform }} -f net9.0-windows10.0.26100.0 /p:Configuration=${{ parameters.dotnet_configuration }} /p:Platform=${{ parameters.dotnet_platform }} /p:AppxPackageDir="AppPackages/" /p:UapAppxPackageBuildMode=SideloadOnly /p:AppxBundle=Never /p:GenerateAppxPackageOnBuild=true /p:SelfContainedIfPreviewWASDK=true
  displayName: Build - ${{ parameters.dotnet_platform }}
- task: CopyFiles@2
  displayName: Copy MSIX Artifacts - ${{ parameters.dotnet_platform }}
  inputs:
    sourceFolder: '$(System.DefaultWorkingDirectory)/AIDevGallery/AppPackages/'
    contents: '*_${{ parameters.dotnet_platform }}_Test/AIDevGallery*_${{ parameters.dotnet_platform }}.msix'
    targetFolder: '$(Build.ArtifactStagingDirectory)/MSIX'
- task: 1ES.PublishPipelineArtifact@1
  displayName: Upload Artifact - MSIX - ${{ parameters.dotnet_platform }}
  inputs:
    path: '$(Build.ArtifactStagingDirectory)/MSIX'
    artifactName: MSIX-${{ parameters.dotnet_platform }}